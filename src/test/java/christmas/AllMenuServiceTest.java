package christmas;

import static camp.nextstep.edu.missionutils.test.Assertions.assertSimpleTest;
import static org.assertj.core.api.Assertions.assertThat;

import camp.nextstep.edu.missionutils.test.NsTest;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

class AllMenuServiceTest extends NsTest {
    private static final String LINE_SEPARATOR = System.lineSeparator();

    @DisplayName("전 메뉴 + 평일 할인 + 증정이벤트")
    @Test
    void 모든_메뉴_주문_테스트_1() {
        assertSimpleTest(() -> {
            run("26", "양송이수프-1,타파스-1,시저샐러드-1,티본스테이크-1,바비큐립-1,크리스마스파스타-1," +
                    "해산물파스타-1,초코케이크-1,아이스크림-1,제로콜라-1,레드와인-1,샴페인-1");
            assertThat(output()).contains(
                    "<주문 메뉴>",
                    "양송이수프 1개",
                    "타파스 1개",
                    "시저샐러드 1개",
                    "티본스테이크 1개",
                    "바비큐립 1개",
                    "해산물파스타 1개",
                    "초코케이크 1개",
                    "크리스마스파스타 1개",
                    "아이스크림 1개",
                    "제로콜라 1개",
                    "레드와인 1개",
                    "샴페인 1개",
                    "<할인 전 총주문 금액>",
                    "296,500원",
                    "<증정 메뉴>",
                    "샴페인 1개",
                    "<혜택 내역>",
                    "평일 할인: -4,046원",
                    "증정 이벤트: -25,000원",
                    "<총혜택 금액>",
                    "-29,046원",
                    "<할인 후 예상 결제 금액>",
                    "292,454원",
                    "<12월 이벤트 배지>",
                    "산타"
            );
        });
    }

    @DisplayName("전 메뉴 + 평일 할인 + 크리스마스 할인 + 특별 할인 + 증정이벤트")
    @Test
    void 모든_메뉴_주문_테스트_2() {
        assertSimpleTest(() -> {
            run("25", "양송이수프-1,타파스-1,시저샐러드-1,티본스테이크-1,바비큐립-1,크리스마스파스타-1," +
                    "해산물파스타-1,초코케이크-1,아이스크림-1,제로콜라-1,레드와인-1,샴페인-1");
            assertThat(output()).contains(
                    "<주문 메뉴>",
                    "양송이수프 1개",
                    "타파스 1개",
                    "시저샐러드 1개",
                    "티본스테이크 1개",
                    "바비큐립 1개",
                    "해산물파스타 1개",
                    "초코케이크 1개",
                    "크리스마스파스타 1개",
                    "아이스크림 1개",
                    "제로콜라 1개",
                    "레드와인 1개",
                    "샴페인 1개",
                    "<할인 전 총주문 금액>",
                    "296,500원",
                    "<증정 메뉴>",
                    "샴페인 1개",
                    "<혜택 내역>",
                    "크리스마스 디데이 할인: -3,400원",
                    "평일 할인: -4,046원",
                    "특별 할인: -1,000원",
                    "증정 이벤트: -25,000원",
                    "<총혜택 금액>",
                    "-33,446원",
                    "<할인 후 예상 결제 금액>",
                    "288,054원",
                    "<12월 이벤트 배지>",
                    "산타"
            );
        });
    }

    @DisplayName("전 메뉴 + 주말 할인 + 크리스마스 할인 + 증정이벤트")
    @Test
    void 모든_메뉴_주문_테스트_3() {
        assertSimpleTest(() -> {
            run("23", "양송이수프-1,타파스-1,시저샐러드-1,티본스테이크-1,바비큐립-1,크리스마스파스타-1," +
                    "해산물파스타-1,초코케이크-1,아이스크림-1,제로콜라-1,레드와인-1,샴페인-1");
            assertThat(output()).contains(
                    "<주문 메뉴>",
                    "양송이수프 1개",
                    "타파스 1개",
                    "시저샐러드 1개",
                    "티본스테이크 1개",
                    "바비큐립 1개",
                    "해산물파스타 1개",
                    "초코케이크 1개",
                    "크리스마스파스타 1개",
                    "아이스크림 1개",
                    "제로콜라 1개",
                    "레드와인 1개",
                    "샴페인 1개",
                    "<할인 전 총주문 금액>",
                    "296,500원",
                    "<증정 메뉴>",
                    "샴페인 1개",
                    "<혜택 내역>",
                    "크리스마스 디데이 할인: -3,200원",
                    "주말 할인: -8,092원",
                    "증정 이벤트: -25,000원",
                    "<총혜택 금액>",
                    "-36,292원",
                    "<할인 후 예상 결제 금액>",
                    "285,208원",
                    "<12월 이벤트 배지>",
                    "산타"
            );
        });
    }

    @Override
    protected void runMain() {
        Application.main(new String[]{});
    }
}
